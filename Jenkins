pipeline {
    agent any
    
    // def tag
    environment {
        DOCKER_HUB_CREDENTIALS = credentials('docker-hub-cred')
        KUBECONFIG_CREDENTIALS = credentials('kube-config-cred')
        // registryCredential = 'dockerhub-credentials'
        // TIMESTAMP = "${currentBuild.timestamp}"
        // def imageName = "banudeep/hw2"
        dockerImage=''
    }

    stages {
        stage('Build the image') {
            steps {
                script {
                    checkout scm
                    dockerImage= docker.build('banudeep/hw2:latest')
                    // Build the Docker image with the dynamic tag
                    // sh "docker build -t ${tag} ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    // Log in to Docker Hub
                    docker login -u $DOCKER_HUB_CREDENTIALS_USR -p $DOCKER_HUB_CREDENTIALS_PSW
                    dockerImage.push()
                    // sh "docker push ${tag}"
                   // docker.withRegistry('', DOCKER_HUB_CREDENTIALS) {
                        // Push Docker image to Docker Hub
                       // dockerImage.push()
                   // }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Set up KUBECONFIG for kubectl
                    withCredentials([[$class: 'FileBinding', credentialsId: 'your-kubeconfig-credentials-id', variable: 'KUBECONFIG']]) {
                        // Deploy using kubectl
                        sh "kubectl --kubeconfig=\$KUBECONFIG apply -f deployment.yaml"
                        sh "kubectl --kubeconfig=\$KUBECONFIG apply -f service.yaml"
                    }
                }
            }
        }
    }
}

 
